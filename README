
Start scripts to manage R and RStudio in Singularity
====================================================

These scripts can be deployed with the containers 
[mlell/singularity-r](https://bitbucket.org/mlell/singularity-r) and 
[mlell/singularity-rstudio](https://bitbucket.org/mlell/singularity-rstudio).

The following text can be used as an example README for the projects where
these scripts are used

-------------------------------------------------------------------------------

Computation environment
======================

This project contains the computation environment where it was created in as
a Singularity container. Therefore, it can be run anywhere Singularity is
installed without further dependencies.

Inside the container, this project folder is available under the path `/proj`.
Therefore, the paths are independent from the machine.

First run of the project
========================

These steps are nessecary when you want to work with this project for the first
time:

 1. When using AsReml 3: Copy your asreml.lic file into the project root

 2. If you are behind a proxy server, create a file named `.Renviron`. On 
    Windows, take care that the file doesn't get a `.txt` file extension. Save
	  the the needed environment variables. For example, for a HTTP proxy:

        http_proxy="http://proxy.example.com:3128"
        https_proxy="http://proxy.example.com:3128"

    If you have another proxy, check the cURL manual to see which environment 
    variables you have to set.
	
 3. To run R in the command line or to run a script, follow the next two 
    sections. To start RStudio Server, which is useful for developing and
    debugging, continue with section "First start of RStudio Server".

Start an R session
==================

Use the script `cexec` to start R. Open a shell, change working directory to
the project folder and type 

    ./cexec R

Execute R scripts
=================

The container for this project includes RStudio as well as bare-bone R. 
Follow the steps in this section if you want to execute R 
without running RStudio. You don't have to do this if you want to run RStudio 
and run an R script from there. 
In RStudio, just use the normal R and Rscript calls. See below on how to prepare
and start RStudio. 
 
Open a shell. You can run R scripts with the help of `./cexec`, that you find 
in the same folder as this README. For example, to run an R script called `example.R`:

    ./cexec Rscript example.R

Start RStudio
=============

 1. If not done already, open a shell and change the working directory to your 
    project folder.

 2. If you started an RStudio session in this project before, you can look up the
    web address by calling `./rstudio list`.
 
 3. To start a new instance of RStudio Server, run `./rstudio start`. If you
    have not set an RStudio password yet, you are asked to do so. The password
    is used to prevent other users logged in at your machine from logging into
    your RStudio session. It is independent from your normal user password.
    Afterwards, A URL is printed to the screen. Enter that URL into your
    browser to access RStudio. Depending on your cluster configuration, the URL
    might be different. Ask your administrator.

To change your RStudio password, type `./rstudio passwd`.


Multiple parallel instances of RServer Studio
=============================================

Accessing multiple instances of RStudio Server in the same browser leads to
problems. You might get logged out of one RStudio when you access the other
one. Use Add-ons like 
[Firefox Multi-Account Containers](https://addons.mozilla.org/de/firefox/addon/multi-account-containers/)
to prevent those.
